version: 2.1

orbs:
  cypress: cypress-io/cypress@1.13.0

workflows:
  build:
    jobs:
      - build_and_test:
          requires:
            - cypress/run

      - cypress/run:
          requires:
            - cypress_install
          record: true # record results on Cypress Dashboard
          yarn: true # use yarn instead of npm
          parallel: true # split all specs across machines
          parallelism: 3 # use 3 CircleCI machines to finish quickly
          group: 'all tests' # name this group "all tests" on the dashboard
          start: 'yarn dev' # start server before running tests
          wait-on: http://localhost:3000 # wait until server is ready
          post-steps:
            - run:
                command: |
                  curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
                  chmod +x ./cc-test-reporter
                  mkdir coverage && ./cc-test-reporter format-coverage -t lcov -o "coverage/codeclimate.$CIRCLE_NODE_INDEX.json" cypress-coverage/lcov.info

            - persist_to_workspace:
                root: ~/
                paths:
                  - project/coverage/*

      - cypress_install

jobs:
  build_and_test:
    docker:
      - image: circleci/node:10.16.0
        environment: # environment variables for primary container
          CC_TEST_REPORTER_ID: 0f2bc6ef737019bfc8eda369cd06b66c54606b144b4d81cec010fb494d2559af

    steps:
      - checkout

      - run: sudo chown -R circleci:circleci /usr/local/bin

      # restore files from persist_to_workspace step
      - attach_workspace:
          at: ~/project

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Copy Cypress Test Results and Remove Unnecessary Paths
          command: |
            mkdir coverage && find . -name "codeclimate.*.json" -exec cp -av {} coverage \;
            rm -rf ~/project/project ~/project/.cache

      - run:
          name: Install dependencies
          command: |
            yarn

      - run:
          name: Initialize CodeClimate
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /usr/local/bin/cc-test-reporter
            chmod +x /usr/local/bin/cc-test-reporter
            /usr/local/bin/cc-test-reporter before-build

      - save_cache:
          paths:
            - node_modules
            - ~/.cache
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run tests
      - run:
          name: Run Tests
          command: |
            yarn lint:ci
            yarn test:ci --max-workers=2

      - run:
          name: Merge Results and Report to CodeClimate
          command: |
            /usr/local/bin/cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.jest.json jest-coverage/lcov.info
            /usr/local/bin/cc-test-reporter sum-coverage -p 4 --output - coverage/* | /usr/local/bin/cc-test-reporter upload-coverage --debug --input -

  cypress_install:
    docker:
      - image: cypress/base:10
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
      - run:
          name: Yarn install
          command: |
            yarn

      - run:
          command: npx cypress verify
      - save_cache:
          key: cache-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.cache
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - .cache/Cypress
