// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`RegistrationForm > should render with required props 1`] = `
<form
  className="flex flex-col items-center w-full"
  noValidate={true}
  onReset={[Function]}
  onSubmit={[Function]}
>
  <div
    className="max-w-xl px-4"
  >
    <p
      className="pb-4"
    >
      We work closely with military veterans, service members, and spouses who are passionate about transitioning into the tech industry. We work with over 7,000 members who are all working towards relevant goals on Slack and in-person meet-ups. Membership is free! Unfamiliar with Slack?
       
      <a
        href="/slack_guide"
        onClick={[Function]}
        onMouseEnter={[Function]}
        onTouchStart={[Function]}
      >
        Learn how to use it!
      </a>
    </p>
  </div>
  <div
    className="flex flex-col justify-between max-w-md"
  >
    <div
      className="field"
      data-testid="INPUT"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="email"
      >
        Email*
      </label>
      <div
        className="inputFeedbackGrouping"
        data-testid="INPUT_FEEDBACK_GROUPING"
      >
        <input
          autoComplete="username email"
          className="Input"
          disabled={false}
          id="email"
          name="email"
          onBlur={[Function]}
          onChange={[Function]}
          type="email"
          value=""
        />
      </div>
    </div>
    <div
      className="field"
      data-testid="INPUT"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="confirm-email"
      >
        Confirm Email*
      </label>
      <div
        className="inputFeedbackGrouping"
        data-testid="INPUT_FEEDBACK_GROUPING"
      >
        <input
          autoComplete="username email"
          className="Input"
          disabled={false}
          id="confirm-email"
          name="confirm-email"
          onBlur={[Function]}
          onChange={[Function]}
          type="email"
          value=""
        />
      </div>
    </div>
    <div
      className="hidden field"
      data-testid="INPUT"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="password"
      >
        Password*
      </label>
      <div
        className="inputFeedbackGrouping"
        data-testid="INPUT_FEEDBACK_GROUPING"
      >
        <input
          autoComplete="new-password"
          className="Input"
          disabled={false}
          id="password"
          name="password"
          onBlur={[Function]}
          onChange={[Function]}
          type="password"
          value="nOnEeDfOrP@ssw0rd!"
        />
      </div>
    </div>
    <div
      className="hidden field"
      data-testid="INPUT"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="confirm-password"
      >
        Confirm Password*
      </label>
      <div
        className="inputFeedbackGrouping"
        data-testid="INPUT_FEEDBACK_GROUPING"
      >
        <input
          autoComplete="new-password"
          className="Input"
          disabled={false}
          id="confirm-password"
          name="confirm-password"
          onBlur={[Function]}
          onChange={[Function]}
          type="password"
          value="nOnEeDfOrP@ssw0rd!"
        />
      </div>
    </div>
    <div
      className="field"
      data-testid="INPUT"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="firstName"
      >
        First Name*
      </label>
      <div
        className="inputFeedbackGrouping"
        data-testid="INPUT_FEEDBACK_GROUPING"
      >
        <input
          autoComplete="given-name"
          className="Input"
          disabled={false}
          id="firstName"
          name="firstName"
          onBlur={[Function]}
          onChange={[Function]}
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="field"
      data-testid="INPUT"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="lastName"
      >
        Last Name*
      </label>
      <div
        className="inputFeedbackGrouping"
        data-testid="INPUT_FEEDBACK_GROUPING"
      >
        <input
          autoComplete="family-name"
          className="Input"
          disabled={false}
          id="lastName"
          name="lastName"
          onBlur={[Function]}
          onChange={[Function]}
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="field"
      data-testid="INPUT"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="zipcode"
      >
        Zipcode*
      </label>
      <div
        className="inputFeedbackGrouping"
        data-testid="INPUT_FEEDBACK_GROUPING"
      >
        <input
          autoComplete="postal-code"
          className="Input"
          disabled={false}
          id="zipcode"
          name="zipcode"
          onBlur={[Function]}
          onChange={[Function]}
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="field"
      data-testid="CHECKBOX"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="codeOfConduct"
      >
        <input
          checked={false}
          className="Checkbox"
          id="codeOfConduct"
          name="codeOfConduct"
          onBlur={[Function]}
          onChange={[Function]}
          type="checkbox"
          value=""
        />
        <span>
          I have read and agree to 
          <a
            className="inline-flex items-start"
            href="https://github.com/OperationCode/operationcode_docs/blob/master/community/code_of_conduct.md"
            onClick={[Function]}
            rel="noopener noreferrer"
            target="_blank"
          >
            Operation Code's Code of Conduct.
            <span
              className="sr-only"
              data-testid="SCREEN_READER_ONLY"
            >
              Opens in new window
            </span>
            <svg
              className="!fill-current relative my-0 mx-1 bottom-0 w-3"
              dangerouslySetInnerHTML={
                {
                  "__html": "<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" id="73ab62bc"><title>External Link Symbol</title><path d="M448 80v352c0 27-21 48-48 48H48c-27 0-48-21-48-48V80c0-27 21-48 48-48h352c27 0 48 21 48 48zm-88 16H248c-21 0-32 26-17 41l32 32L68 364c-5 5-5 13 0 17l31 31c4 5 12 5 17 0l195-195 32 32c15 15 41 4 41-17V120c0-13-11-24-24-24z"/></symbol><use href='#73ab62bc'/>",
                }
              }
              viewBox="0 0 448 512"
            />
          </a>
          *
        </span>
      </label>
    </div>
    <div
      className="field"
      data-testid="CHECKBOX"
    >
      <label
        className="text-themeSecondary text-sm"
        data-testid="LABEL"
        htmlFor="slackGuidelines"
      >
        <input
          checked={false}
          className="Checkbox"
          id="slackGuidelines"
          name="slackGuidelines"
          onBlur={[Function]}
          onChange={[Function]}
          type="checkbox"
          value=""
        />
        <span>
          I have read and agree to 
          <a
            className="inline-flex items-start"
            href="https://github.com/OperationCode/START_HERE/blob/master/community_guidelines.md"
            onClick={[Function]}
            rel="noopener noreferrer"
            target="_blank"
          >
            Operation Code's Slack Community Guidelines.
            <span
              className="sr-only"
              data-testid="SCREEN_READER_ONLY"
            >
              Opens in new window
            </span>
            <svg
              className="!fill-current relative my-0 mx-1 bottom-0 w-3"
              dangerouslySetInnerHTML={
                {
                  "__html": "<symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512" id="73ab62bc"><title>External Link Symbol</title><path d="M448 80v352c0 27-21 48-48 48H48c-27 0-48-21-48-48V80c0-27 21-48 48-48h352c27 0 48 21 48 48zm-88 16H248c-21 0-32 26-17 41l32 32L68 364c-5 5-5 13 0 17l31 31c4 5 12 5 17 0l195-195 32 32c15 15 41 4 41-17V120c0-13-11-24-24-24z"/></symbol><use href='#73ab62bc'/>",
                }
              }
              viewBox="0 0 448 512"
            />
          </a>
          *
        </span>
      </label>
    </div>
  </div>
  <div
    className="max-w-md px-3 pt-1"
  >
    <button
      className="Button secondary"
      data-testid="BUTTON"
      disabled={false}
      onClick={[Function]}
      tabIndex={0}
      type="submit"
    >
      Submit
    </button>
    <p
      className="pt-5 text-xs"
    >
      The demographic information you provide, helps us understand our community needs, ensure diversity, and provide specific resources to reach our mission. Thank you in advance for providing honest answers. 
      <span
        className="font-bold"
      >
        We do not sell your information to anyone.
      </span>
    </p>
  </div>
</form>
`;
